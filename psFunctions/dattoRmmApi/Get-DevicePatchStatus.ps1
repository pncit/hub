function Get-DevicePatchStatus {
    <#
    .SYNOPSIS 
    Gets device patch status from the Datto RMM API

    .DESCRIPTION
    If provided with valid access parameters and a valid device uid, this will return the patch status from the Datto RMM API

    .PARAMETER apiAccessToken
    API Access Token generated by New-DattoRmmApiAccessToken.

    .PARAMETER apiUrl
    Region-specific API Url. Allowable values are:

    https://pinotage-api.centrastage.net

    https://merlot-api.centrastage.net

    https://concord-api.centrastage.net

    https://zinfandel-api.centrastage.net

    https://syrah-api.centrastage.net

    .PARAMETER deviceId
    Datto-defined uid. From within a machine this can be collected via
    
    $deviceId = Get-DeviceId

    .OUTPUTS
    [String] patch status

    .EXAMPLE
    $devicePatchStatus = Get-DevicePatchStatus -deviceId $deviceId

    .NOTES
    #>
    param
	(
        [parameter(Mandatory=$false)]
        [validateNotNullorEmpty()]
        [String]$apiAccessToken=$global:dattoRmmApiAccessToken,

        [parameter(Mandatory=$false)]
        [ValidateSet("https://pinotage-api.centrastage.net","https://merlot-api.centrastage.net","https://concord-api.centrastage.net","https://zinfandel-api.centrastage.net","https://syrah-api.centrastage.net")]
        [String]$apiUrl=$global:dattoRmmApiUrl,

        [parameter(mandatory=$true)]
        [validateNotNullorEmpty()]
        [string]$deviceId
    )   
    $deviceData = Get-DeviceData -apiAccessToken $apiAccessToken -apiUrl $apiUrl -deviceId $deviceId
    return $deviceData.patchManagement.patchStatus
}