function Set-DeviceOpenAlertToResolved {
    <#
    .SYNOPSIS 
    Sets an alert to 'resolved' status

    .DESCRIPTION
    If provided with valid access parameters and a valid alert uid, this will set that alert to 'resolved' status

    .PARAMETER apiAccessToken
    API Access Token generated by New-DattoRmmApiAccessToken.

    .PARAMETER apiUrl
    Region-specific API Url. Allowable values are:

    https://pinotage-api.centrastage.net

    https://merlot-api.centrastage.net

    https://concord-api.centrastage.net

    https://zinfandel-api.centrastage.net

    https://syrah-api.centrastage.net

    .PARAMETER alertUid
    Datto-defined alert uid. 

    .OUTPUTS
    [System.Object] custom object containing device data

    .EXAMPLE
    $deviceData = Set-DeviceOpenAlertToResolved -alertUid $alertUid
    #>
    param
	(
        [parameter(Mandatory=$false)]
        [validateNotNullorEmpty()]
        [String]$apiAccessToken=$global:dattoRmmApiAccessToken,

        [parameter(Mandatory=$false)]
        [ValidateSet("https://pinotage-api.centrastage.net","https://merlot-api.centrastage.net","https://concord-api.centrastage.net","https://zinfandel-api.centrastage.net","https://syrah-api.centrastage.net")]
        [String]$apiUrl=$global:dattoRmmApiUrl,

        [parameter(mandatory=$true)]
        [validateNotNullorEmpty()]
        [string]$alertUid
    )   
    $response = New-DattoRmmApiRequest -apiAccessToken $apiAccessToken -apiUrl $apiUrl -apiMethod "post" -apiRequest "alert/$alertUid/resolve"
    return $response
}